stages:
  pull_data:
    cmd: mkdir -p data/raw && poetry run kaggle competitions download -c playground-series-s4e12
      && mv playground-series-s4e12.zip data/raw/ && cd data/raw/ && unzip playground-series-s4e12.zip
      && rm playground-series-s4e12.zip
    outs:
    - data/raw

  prepare_basic:
    cmd: poetry run python insurance/prepare_basic.py
    deps:
    - insurance/prepare_basic.py
    params:
    - data.random_state
    outs:
    - data/prepared/prepared_data.feather

  train:
    foreach:
    - basic
    - xgboost
    do:
      cmd: poetry run python insurance/train_${item}.py
      deps:
      - insurance/train_${item}.py
      - data/prepared/prepared_data.feather
      - insurance/data_pipeline.py
      outs:
      - out/models/model_${item}.pkl
      - out/models/data_pipeline_${item}.pkl
      params:
      - train.random_state
      - train.n_splits
      - train.${item}
      frozen: true

  train_imputer:
    cmd: poetry run python insurance/torch_imputer.py  data/prepared/prepared_data.feather
    deps:
    - data/prepared/prepared_data.feather
    - insurance/torch_imputer.py
    # outs:
    # - out/models/torch_imputer.pt

metrics:
- dvclive-optuna/metrics.json
- out/metrics.json
- dvclive/metrics.json
plots:
- out/plots/metrics:
    x: step
- dvclive/plots/metrics:
    x: step
params:
- dvclive-optuna/params.yaml
- dvclive/params.yaml
