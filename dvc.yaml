stages:
  pull_data:
    cmd: mkdir -p data/raw && poetry run kaggle competitions download -c playground-series-s4e12
      && mv playground-series-s4e12.zip data/raw/ && cd data/raw/ && unzip playground-series-s4e12.zip
      && rm playground-series-s4e12.zip
    outs:
    - data/raw

  prepare_basic:
    cmd: poetry run python insurance/prepare_basic.py
    deps:
    - insurance/prepare_basic.py
    params:
    - data.random_state
    outs:
    - data/prepared/prepared_data.feather


  train_layer_0:
    foreach:
    - xgboost
    - catboost
    - lgbm
    do:
      cmd: poetry run python insurance/train_${item}.py --input-data-path data/prepared/prepared_data.feather
        --layer 0
      deps:
      - data/prepared/prepared_data.feather
      - insurance/data_pipeline.py
      - insurance/train_${item}.py
      outs:
      - out/data_pipeline_train_${item}.pkl
      - out/models/${item}_model_layer_0.pkl
      - data/oof/${item}_layer_0.feather

  train_layer_1:
    foreach:
    - xgboost
    - catboost
    - lgbm
    do:
      cmd: poetry run python insurance/train_${item}.py --input-data-path data/oof/${item}_layer_0.feather
        --layer 1
      deps:
      - data/oof/${item}_layer_0.feather
      - insurance/train_${item}.py
      outs:
      - out/models/${item}_model_layer_1.pkl
      - data/oof/${item}_layer_1.feather


  # train_catboost:
  #   cmd: poetry run python insurance/train_catboost.py data/prepared/prepared_data.feather
  #   deps:
  #   - data/prepared/prepared_data.feather
  #   - insurance/data_pipeline.py
  #   - insurance/train_catboost.py
  #   outs:
  #   - out/data_pipeline_train_catboost.pkl
  #   - out/models/catboost_model.pkl

  # train_lgbm:
  #   cmd: poetry run python insurance/train_lgbm.py data/prepared/prepared_data.feather
  #   deps:
  #   - data/prepared/prepared_data.feather
  #   - insurance/data_pipeline.py
  #   - insurance/train_lgbm.py
  #   outs:
  #   - out/data_pipeline_train_lgbm.pkl
  #   - out/models/lgbm_model.pkl

  # train_ensemble:
  #   cmd: poetry run python insurance/train_ensemble.py data/prepared/prepared_data.feather
  #   deps:
  #   - data/prepared/prepared_data.feather
  #   - insurance/data_pipeline.py
  #   - insurance/train_ensemble.py
  #   - out/models/xgboost_model.pkl
  #   - out/models/catboost_model.pkl
  #   outs:
  #   - out/data_pipeline_train_ensemble.pkl
  #   - out/models/ensemble_model.pkl

  # train:
  #   foreach:
  #   - xgboost
  #   do:
  #     cmd: poetry run python insurance/train_${item}.py
  #     deps:
  #     - insurance/train_${item}.py
  #     - data/prepared/prepared_imputed_data.feather
  #     - insurance/data_pipeline.py
  #     outs:
  #     - out/models/model_${item}.pkl
  #     - out/models/data_pipeline_${item}.pkl
  #     params:
  #     - train.random_state
  #     - train.n_splits
  #     - train.${item}
  #     frozen: true



metrics:
- out/metrics.json
- dvclive/metrics.json
- dvclive/xgboost/metrics.json
- dvclive/catboost/metrics.json
- dvclive/lgbm/metrics.json
- dvclive/ensemble/metrics.json
- dvclive/xgboost_layer_0/metrics.json
- dvclive/xgboost_layer_1/metrics.json
plots:
- dvclive/plots/metrics:
    x: step
- dvclive/plots/custom/catboost CV Loss.json:
    template: linear
    x: booster
    y:
    - train-RMSE-mean
    - test-RMSE-mean
    x_label: RMSLE
    y_label: Booster
- dvclive/xgboost/plots/metrics:
    x: step
- dvclive/xgboost/plots/custom/XGBoost CV Loss.json:
    template: linear
    x: booster
    y:
    - train-rmse-mean
    - test-rmse-mean
    x_label: RMSLE
    y_label: Booster
- dvclive/catboost/plots/metrics:
    x: step
- dvclive/catboost/plots/custom/catboost CV Loss.json:
    template: linear
    x: booster
    y:
    - train-RMSE-mean
    - test-RMSE-mean
    x_label: RMSLE
    y_label: Booster
- dvclive/lgbm/plots/metrics:
    x: step
- dvclive/lgbm/plots/custom/LGBM CV Loss.json:
    template: linear
    x: x
    y:
    - valid rmse-mean
    x_label: RMSLE
    y_label: Booster
- dvclive/ensemble/plots/metrics:
    x: step
- dvclive/xgboost_layer_0/plots/metrics:
    x: step
- dvclive/xgboost_layer_0/plots/custom/XGBoost CV Loss Layer 0.json:
    template: linear
    x: booster
    y:
    - train-rmse-mean
    - test-rmse-mean
    x_label: RMSLE
    y_label: Booster
- dvclive/xgboost_layer_1/plots/metrics:
    x: step
- dvclive/xgboost_layer_1/plots/custom/XGBoost CV Loss Layer 1.json:
    template: linear
    x: booster
    y:
    - train-rmse-mean
    - test-rmse-mean
    x_label: RMSLE
    y_label: Booster
